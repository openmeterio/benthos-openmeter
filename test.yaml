input:
  label: "schedule"
  schedule:
    input:
      label: "kube"
      kubernetes_resources:
        resource:
          version: v1
          name: pods
        namespaces:
          - default
    interval: "3s"

pipeline:
  processors:
    - mapping: |
        root = {
          "id": uuid_v4(),
          "specversion": "1.0",
          "type": "kube-pod-runtime",
          "source": "kubernetes-api",
          "time": meta("schedule_time"),
          "subject": this.metadata.labels."openmeter.io/subject".or(this.metadata.name),
          "data": this.metadata.labels.filter(item -> item.key.has_prefix("data.openmeter.io/")).map_each_key(key -> key.trim_prefix("data.openmeter.io/")).assign({
            "name": this.metadata.name,
            "namespace": this.metadata.namespace,
            "duration_seconds": (meta("schedule_interval").parse_duration() / 1000 / 1000 / 1000).round().int64(),
          }),
        }
    - json_schema:
        schema_path: "file://./cloudevents.spec.json"
    - catch:
        - log:
            level: ERROR
            message: "Schema validation failed due to: ${!error()}"
        - mapping: "root = deleted()" # Drop messages that fail

output:
  # stdout:
  #   codec: lines
  label: "om"
  openmeter:
    url: ${OPENMETER_URL:https://openmeter.cloud}
    token: ${OPENMETER_TOKEN:}
    batching:
      count: 5

logger:
  level: DEBUG
